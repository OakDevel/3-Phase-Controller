/* 
 * File:   ThreePhaseDriver.cpp
 * Author: Cameron
 * 
 * Created on December 17, 2014, 3:20 PM
 */

#include <avr/pgmspace.h>

#include "ThreePhaseDriver.h"
#include "Board.h"

void ThreePhaseDriver::init() {
 Board::DRV::AL.off();
 Board::DRV::BL.off();
 Board::DRV::CL.off();
 Board::DRV::AH.off();
 Board::DRV::BH.off();
 Board::DRV::CH.off();
 
 Board::DRV::AL.output();
 Board::DRV::BL.output();
 Board::DRV::CL.output();
 Board::DRV::AH.output();
 Board::DRV::BH.output();
 Board::DRV::CH.output();
 
 // WGM = 0b0001 (PWM Phase Correct 8-bit)
 // COM1{A,B,C} = 0b10
 
 OCR1A = 0;
 OCR1B = 0;
 OCR1C = 0;
 
 /*
  * WGM10:  1 -  
  * WGM11:  0 - 
  * COM1C0: 0 - 
  * COM1C1: 1 - 
  * COM1B0: 0 - 
  * COM1B1: 1 - 
  * COM1A0: 0 - 
  * COM1A1: 1 - 
  * 
  * CS10:  1 - 
  * CS11:  0 - 
  * CS12:  0 - 
  * WGM12: 0 - 
  * WGM13: 0 - 
  * ~~~~~: 0 - 
  * ICES1: 0 - 
  * ICNC1: 0 - 
  */
 
 TCCR1A = 0b10101001;
 TCCR1B = 0b00000001;
}

static const u1 limitedSinTable[] PROGMEM = {
   0,  2,  4,  6,  8, 10, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31,
  33, 35, 37, 39, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64,
  66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96,
  98,100,101,103,105,107,109,111,113,115,117,118,120,122,124,126,
 128,129,131,133,135,136,138,140,142,143,145,147,149,150,152,154,
 155,157,159,160,162,163,165,167,168,170,171,173,174,176,177,179,
 180,182,183,185,186,188,189,190,192,193,194,196,197,198,200,201,
 202,204,205,206,207,208,210,211,212,213,214,215,217,218,219,220,
 221,222,223,224,225,226,227,228,229,230,231,231,232,233,234,235,
 236,236,237,238,239,239,240,241,241,242,243,243,244,245,245,246,
 246,247,247,248,248,249,249,250,250,250,251,251,252,252,252,253,
 253,253,253,254,254,254,254,254,254,255,255,255,255,255,255,255,
 255,255,255,255,255,255,255,255,254,254,254,254,254,254,253,253,
 253,253,252,252,252,251,251,250,250,250,249,249,248,248,247,247,
 246,246,245,245,244,243,243,242,241,241,240,239,239,238,237,236,
 236,235,234,233,232,231,231,230,229,228,227,226,225,224,223,222,
};

u1 ThreePhaseDriver::getPhasePWM(const u1 phase) {
// return 255 * SIN(PI * phase * 2/3/StepsPerPhase);
 return pgm_read_byte(&limitedSinTable[phase]);
}


